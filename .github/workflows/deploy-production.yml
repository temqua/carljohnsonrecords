name: Deploy to production

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Compress build into .tgz file
        run: mkdir -p release && tar --exclude=".[^/]*" -czf release/cj-release.tgz .
      - name: Download build
        uses: actions/upload-artifact@v2
        with:
          name: cj-release
          path: ./cj-release.tgz
  upload:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Prepare build to upload
        uses: actions/download-artifact@v2
        with:
          name: cj-release

      - name: upload to production via SSH
        uses: marcodallasanta/ssh-scp-deploy@v1.0.5
        with:
          local: cj-release.tgz
          remote: /site/cj-release.tgz
          host: ${{secrets.PROD_SERVER_HOST}}
          user: ${{secrets.PROD_SERVER_USERNAME}}
          key: ${{secrets.PROD_SERVER_KEY}}
          post_upload: tar -xzf /site/cj-release.tgz . &&
            rm /site/cj-release.tgz

      - name: start docker
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.PROD_SERVER_HOST }}
          username: ${{ secrets.PROD_SERVER_USERNAME }}
          key: ${{ secrets.PROD_SERVER_KEY }}
          port: 22
          script_stop: true
          script: |
            cd /site
            docker build -t cjsite  .
            docker stop cjsite || true
            docker rm cjsite || true
            docker run -d -p 8080:8080 --name cjsite --restart always cjsite
